        -:    0:Source:c_02.c
        -:    0:Graph:c_02.gcno
        -:    0:Data:c_02.gcda
        -:    0:Runs:5
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <math.h>
        -:    3:
        5:    4:float main(void)
        -:    5:{
        -:    6:    float x_a, x_b, x_c, y_a, y_b, y_c, s1, s2, s3, s1_2, s2_2, s3_2;
        -:    7:    //Ввод координат вершин
        5:    8:    printf("Pervuiu vershinu treugolinika: ");
        5:    9:    scanf("%f%f", &x_a, &y_a);
        5:   10:    printf("Vtoruiu vershinu treugolinika: ");
        5:   11:    scanf("%f%f", &x_b, &y_b);
        5:   12:    printf("Tretiu vershinu treugolinika: ");
        5:   13:    scanf("%f%f", &x_c, &y_c);
        -:   14:
        -:   15:    //Находим квадраты сторон	
        5:   16:    s1_2 = pow((x_a - x_b), 2) + pow((y_a - y_b), 2);
        5:   17:    s2_2 = pow((x_b - x_c), 2) + pow((y_b - y_c), 2);
        5:   18:    s3_2 = pow((x_c - x_a), 2) + pow((y_c - y_a), 2);
        5:   19:    s1 = sqrt(s1_2);
        5:   20:    s2 = sqrt(s2_2);
        5:   21:    s3 = sqrt(s3_2);
        5:   22:    printf("s1 = %f\ns2 = %f\ns3 = %f\n", s1_2 ,s2_2 ,s3_2);
        -:   23:
        -:   24:	
        -:   25:    //Проверка на существование треугольника	
        5:   26:    if (((s1 + s2) <= s3) || ((s1 + s3) <= s2) || ((s2 + s3) <= s1))
        -:   27:    {
        -:   28:
        1:   29:	printf("\n\nIt's not triangle.\n\n");
        -:   30:    }
        -:   31:    //Проверка является ли треугольник прямоугольным
        4:   32:    else if ((s3_2 == s1_2 + s2_2) || (s2_2 == s1_2 + s3_2) || (s1_2 == s3_2 + s2_2))
        -:   33:    {
        2:   34:	printf("This is rectangular triangle\n\n");
        -:   35:    }
        -:   36:    //Проверка является ли треугольник остроугольным
        2:   37:    else if (((s1_2 + s2_2 - s3_2)/(2*s1*s2) > 0) && ((s3_2 + s2_2 - s1_2)/(2*s3*s2)>0) && ((s1_2 + s3_2 - s2_2)/(2*s1*s3)>0))
        -:   38:    {
        1:   39:        printf("This is acute triangle\n\n");
        -:   40:    }
        -:   41:    //Проверка является ли треугольник тупоугольным
        -:   42:    else{
        1:   43:	printf("This is obtuse triangle\n\n");
        -:   44:    }
        5:   45:    return 0;
        -:   46:
        -:   47:}
